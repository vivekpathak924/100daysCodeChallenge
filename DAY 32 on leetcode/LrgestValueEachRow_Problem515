/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> result;
        if(root == NULL)
            return result;
        
        queue<TreeNode*> Q;
        Q.push(root);
        int maxValue = INT_MIN;
        
        while(!Q.empty()){
            int length = Q.size();
            maxValue = INT_MIN;
            for(int index = 0; index < length; index++){
                TreeNode* front = Q.front();
                Q.pop();
                if(front->val > maxValue){
                    maxValue = front->val;
                }
                
                if(front->left)
                    Q.push(front->left);
                if(front->right)
                    Q.push(front->right);
            }
            
            result.push_back(maxValue);
        }
        
        return result;
    }
};
